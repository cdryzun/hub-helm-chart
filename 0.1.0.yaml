---
# Source: neo/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: neo-agent
  namespace: default
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/instance: neo
  annotations:
---
# Source: neo/templates/rbac/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: neo-agent
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/instance: neo
rules:
  # Access Control RBACs.
  - resources:
      - ingressclasses
    apiGroups:
      - networking.k8s.io
      - neo.traefik.io
    verbs:
      - list
      - watch
  - resources:
      - ingresses
    apiGroups:
      - networking.k8s.io
      - extensions
    verbs:
      - list
      - watch
      - update
  - resources:
      - accesscontrolpolicies
    apiGroups:
      - neo.traefik.io
    verbs:
      - list
      - watch
  - resources:
      - middlewares
    apiGroups:
      - traefik.containo.us
    verbs:
      - create
      - get
      - update
      - delete
  # Other RBACs.
  - verbs:
      - list
    apiGroups:
      - ""
    resources:
      - namespaces
      - pods
  - apiGroups:
      - traefik.containo.us
    resources:
      - middlewares
      - ingressroutes
      - traefikservices
      - ingressroutetcps
      - ingressrouteudps
      - tlsoptions
      - tlsstores
      - serverstransports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
      - replicasets
      - daemonsets
    verbs:
      - get
      - list
      - watch
---
# Source: neo/templates/rbac/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: neo 
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/instance: neo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: neo-agent
subjects:
  - kind: ServiceAccount
    name: neo-agent
    namespace: default
---
# Source: neo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: neo
  namespace: default
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/instance: neo
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 443
      name: neo-agent-webhook
    - port: 80
      name: neo-agent-auth
  selector:
    app: neo-agent
---
# Source: neo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo-agent
  namespace: default
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/instance: neo
  annotations:
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: neo-agent 
  template: 
    metadata:
      labels:
        app: neo-agent
      annotations:
    spec:
      serviceAccountName: neo-agent
      containers:
        - name: neo-agent
          image: "gcr.io/traefiklabs/neo-agent:latest"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /var/run/neo-agent/
              name: neo-certs
          args:
            - --token=powpow
            - "--log-level=debug"
            - "--platform-url=https://platform.neo.traefiklabs.tech"
      volumes:
        - name: neo-certs 
          secret:
            secretName: neo-certs 
            items:
              - key: tls.crt
                path: cert.pem
              - key: tls.key
                path: key.pem
---
# Source: neo/templates/admission-webhook.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webhook-cert-sa
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: neo
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
---
# Source: neo/templates/admission-webhook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: webhook-cert-sa-cluster-role
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: neo
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
rules:
  - verbs:
      - get
      - create
      - patch
    resources:
      - mutatingwebhookconfigurations
    apiGroups:
      - admissionregistration.k8s.io
  - verbs:
      - get
      - create
      - delete
      - list
      - watch
    resources:
      - certificatesigningrequests
    apiGroups:
      - certificates.k8s.io
  - verbs:
      - update
    resources:
      - certificatesigningrequests/approval
    apiGroups:
      - certificates.k8s.io
  - verbs:
      - approve
    resourceNames:
      - kubernetes.io/*
    resources:
      - signers
    apiGroups:
      - certificates.k8s.io
  - verbs:
      - create
      - get
      - patch
      - update
    apiGroups:
      - ""
    resources:
      - secrets
  - verbs:
      - get
    apiGroups:
      - ""
    resources:
      - configmaps
---
# Source: neo/templates/admission-webhook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: webhook-cert-sa-role-binding
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/instance: neo
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: webhook-cert-sa-cluster-role
subjects:
  - kind: ServiceAccount
    name: webhook-cert-sa
    namespace: default
---
# Source: neo/templates/admission-webhook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: webhook-cert-setup
  namespace: default
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/instance: neo
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: webhook-cert-sa
      containers:
        - name: webhook-cert-setup
          image: newrelic/k8s-webhook-cert-manager:1.3.2
          imagePullPolicy: IfNotPresent
          args:
            - ./generate_certificate.sh
            - --service
            - neo-agent 
            - --webhook
            - neo 
            - --secret
            - neo-certs
            - --namespace
            - default
      restartPolicy: Never
  backoffLimit: 0
---
# Source: neo/templates/admission-controller.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: neo 
  namespace: default
  labels:
    app.kubernetes.io/name: neo
    helm.sh/chart: neo-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/instance: neo
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
webhooks:
  - name: neo-agent.default.svc.cluster.local
    clientConfig:
      service:
        name: neo-agent
        namespace: default
        path: /
    sideEffects: None
    admissionReviewVersions: [ "v1" ]
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [ "extensions" ]
        apiVersions: [ "v1beta1" ]
        resources: [ "ingresses" ]
        scope: "Namespaced"
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [ "networking.k8s.io" ]
        apiVersions: [ "v1beta1" ]
        resources: [ "ingresses" ]
        scope: "Namespaced"
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [ "networking.k8s.io" ]
        apiVersions: [ "v1" ]
        resources: [ "ingresses" ]
        scope: "Namespaced"
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [ "traefik.containo.us" ]
        apiVersions: [ "v1alpha1" ]
        resources: [ "ingresseroutes" ]
        scope: "Namespaced"
